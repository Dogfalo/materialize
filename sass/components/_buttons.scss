// shared styles
.btn,
.btn-flat {
  border: $button-border;
  border-radius: $button-radius;
  display: inline-block;
  height: $button-height;
  line-height: $button-height;
  padding: $button-padding;
  text-transform: uppercase;
  vertical-align: middle;
  // Gets rid of tap active state
  -webkit-tap-highlight-color: transparent;
}

// Disabled shared style
.btn.disabled,
.btn-floating.disabled,
.btn-large.disabled,
.btn-flat.disabled,
.btn:disabled,
.btn-floating:disabled,
.btn-large:disabled,
.btn-flat:disabled,
.btn[disabled],
.btn-floating[disabled],
.btn-large[disabled],
.btn-flat[disabled] {
  pointer-events: none;
  background-color: $button-disabled-background !important;
  box-shadow: none;
  color: $button-disabled-color !important;
  cursor: default;

  &:hover {
    background-color: $button-disabled-background !important;
    color: $button-disabled-color !important;
  }
}

// Shared icon styles
.btn,
.btn-floating,
.btn-large,
.btn-flat {
  font-size: $button-font-size;
  outline: 0;

  i {
    font-size: $button-icon-font-size;
    line-height: inherit;
  }
}

// Shared focus button style
.btn,
.btn-floating {
  &:focus {
    background-color: darken($button-raised-background, 10%);
  }
}

// Raised Button
.btn {
  text-decoration: none;
  color: $button-raised-color;
  background-color: $button-raised-background;
  text-align: center;
  letter-spacing: .5px;
  @extend .z-depth-1;
  transition: .2s ease-out;
  cursor: pointer;

  &:hover {
    background-color: $button-raised-background-hover;
    @extend .z-depth-1-half;
  }
}

// Floating button
.btn-floating {
  &:hover {
    background-color: $button-floating-background-hover;
    @extend .z-depth-1-half;
  }

  &:before {
    border-radius: 0;
  }

  &.btn-large {
    &.halfway-fab {
      bottom: -$button-floating-large-size / 2;
    }

    width: $button-floating-large-size;
    height: $button-floating-large-size;
    i {
      line-height: $button-floating-large-size;
    }
  }

  &.halfway-fab {
    &.left {
      right: auto;
      left: 24px;
    }

    position: absolute;
    right: 24px;
    bottom: -$button-floating-size / 2;
  }

  display: inline-block;
  color: $button-floating-color;
  position: relative;
  overflow: hidden;
  z-index: 1;
  width: $button-floating-size;
  height: $button-floating-size;
  line-height: $button-floating-size;
  padding: 0;
  background-color: $button-floating-background;
  border-radius: $button-floating-radius;
  @extend .z-depth-1;
  transition: .3s;
  cursor: pointer;
  vertical-align: middle;

  i {
    width: inherit;
    display: inline-block;
    text-align: center;
    color: $button-floating-color;
    font-size: $button-large-icon-font-size;
    line-height: $button-floating-size;
  }
}

// button fix
button.btn-floating {
  border: $button-border;
}

// Fixed Action Button
.fixed-action-btn {
  &.active {
    ul {
     visibility: visible;
    }
  }

  &.horizontal {
    padding: 0 0 0 15px;

    ul {
      text-align: right;
      right: 64px;
      top: 50%;
      transform: translateY(-50%);
      height: 100%;
      left: auto;
      width: 500px; /*width 100% only goes to width of button container */

      li {
        display: inline-block;
        margin: 15px 15px 0 0;
      }
    }
  }

  &.toolbar {
    &.active {
      & > a i {
        opacity: 0;
      }
    }

    padding: 0;
    height: $button-floating-large-size;

    ul {
      display: flex;
      top: 0;
      bottom: 0;
      z-index: 1;

      li {
        flex: 1;
        display: inline-block;
        margin: 0;
        height: 100%;
        transition: none;

        a {
          display: block;
          overflow: hidden;
          position: relative;
          width: 100%;
          height: 100%;
          background-color: transparent;
          box-shadow: none;
          color: #fff;
          line-height: $button-floating-large-size;
          z-index: 1;

          i {
            line-height: inherit;
          }
        }
      }
    }
  }

  position: fixed;
  right: 23px;
  bottom: 23px;
  padding-top: 15px;
  margin-bottom: 0;
  z-index: 998;

  ul {
    left: 0;
    right: 0;
    text-align: center;
    position: absolute;
    bottom: 64px;
    margin: 0;
    visibility: hidden;

    li {
      margin-bottom: 15px;
    }

    a.btn-floating {
      opacity: 0;
    }
  }

  .fab-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: $button-floating-size;
    height: $button-floating-size;
    background-color: $button-floating-background;
    border-radius: $button-floating-radius;
    transform: scale(0);
  }
}

// Flat button
.btn-flat {
  box-shadow: none;
  background-color: transparent;
  color: $button-flat-color;
  cursor: pointer;
  transition: background-color .2s;

  &:focus,
  &:hover {
    box-shadow: none;
  }

  &:focus {
    background-color: rgba(0,0,0,.1);
  }

  &.disabled {
    background-color: transparent !important;
    color: $button-flat-disabled-color !important;
    cursor: default;
  }
}

// Large button
.btn-large {
  @extend .btn;
  height: $button-large-height;
  line-height: $button-large-height;

  i {
    font-size: $button-large-icon-font-size;
  }
}

// Block button
.btn-block {
  display: block;
}

// loading btn
@keyframes btnLoadingSpin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.btn-loading,
.btn-loading-icons {
  @extend .btn;
  &.is-loading {
    pointer-events: none;
    &.is-clickable {
      pointer-events: auto !important;
    }
  }
}

.btn-loading {
  transition: color 500ms ease;

  &.is-loading {
    color: transparent !important;
  }
  &.is-loading:after {
    animation: fadeIn 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
  }
  &:after {
    // even when hidden, spin animation is needed : when deleting .is-loading class, spin shouldn't stop while fadingOut
    animation: fadeOut 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
    border: 2px solid #FFFFFF;
    border-radius: 290486px;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    position: absolute;
    left: calc(50% - (1rem / 2));
    top: calc(50% - (1rem / 2));
  }

  // Color Classes
  @each $color_name, $color in $colors {
    @each $color_type, $color_value in $color {
      @if $color_type == "base" {
        &.#{$color_name}-text:after {
          border: 2px solid $color_value;
          border-radius: 290486px;
          border-right-color: transparent;
          border-top-color: transparent;
        }
      }
      @else if $color_name != "shades" {
        // because .text-* classes already use !important and make text appear if not present
        // &.#{$color_name}-text.text-#{$color_type} {
        //   color: transparent !important;
        // }
        &.#{$color_name}-text.text-#{$color_type}:after {
          border: 2px solid $color_value !important;
          border-radius: 290486px;
          border-right-color: transparent;
          border-top-color: transparent;
        }
      }
    }
  }
}
// Large loading button
.btn-loading-large {
  @extend .btn-large;
  @extend .btn-loading;
}
// Flat loading button
.btn-loading-flat {
  @extend .btn-flat;
  @extend .btn-loading;
  &:after {
    // even when hidden, spin animation is needed : when deleting .is-loading class, spin shouldn't stop while fadingOut
    animation: fadeOut 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
    border: 2px solid #000000;
    border-radius: 290486px;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    position: absolute;
    left: calc(50% - (1rem / 2));
    top: calc(50% - (1rem / 2));
  }
}

.btn-loading-icons {
  i.material-icons {
    transition:color 500ms ease;
  }

  &.is-loading i.material-icons {
    color: transparent !important;
  }
  &.is-loading i.material-icons:after {
    animation: fadeIn 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
  }
  i.material-icons:after {
    // even when hidden, spin animation is needed : when deleting .is-loading class, spin shouldn't stop while fadingOut
    animation: fadeOut 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
    border: 2px solid #FFFFFF;
    border-radius: 290486px;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: block;
    height: 1rem;
    width: 1rem;
    position: absolute;
    // center on icon
    margin-left:.2rem;
    top: calc(50% - (1rem / 2));
  }
  // Color Classes
  @each $color_name, $color in $colors {
    @each $color_type, $color_value in $color {
      @if $color_type == "base" {
        &.#{$color_name}-text i.material-icons:after {
          border: 2px solid $color_value;
          border-radius: 290486px;
          border-right-color: transparent;
          border-top-color: transparent;
        }
      }
      @else if $color_name != "shades" {
        // because .text-* classes already use !important and make text appear if not present
        // &.#{$color_name}-text.text-#{$color_type} i.material-icons {
        //   color: transparent !important;
        // }
        &.#{$color_name}-text.text-#{$color_type} i.material-icons:after {
          border: 2px solid $color_value !important;
          border-radius: 290486px;
          border-right-color: transparent;
          border-top-color: transparent;
        }
      }
    }
  }
}
// Large loading button
.btn-loading-large-icons {
  @extend .btn-large;
  @extend .btn-loading-icons;
}
// Flat loading button
.btn-loading-flat-icons {
  @extend .btn-flat;
  @extend .btn-loading-icons;
  & i.material-icons:after {
    // even when hidden, spin animation is needed : when deleting .is-loading class, spin shouldn't stop while fadingOut
    animation: fadeOut 500ms ease forwards, btnLoadingSpin 500ms infinite linear;
    border: 2px solid #000000;
    border-radius: 290486px;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: block;
    height: 1rem;
    width: 1rem;
    position: absolute;
    // center on icon
    margin-left:.2rem;
    top: calc(50% - (1rem / 2));
  }
}
